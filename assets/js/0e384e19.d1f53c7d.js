"use strict";(self.webpackChunkeloquent=self.webpackChunkeloquent||[]).push([[9671],{3905:(e,a,r)=>{r.d(a,{Zo:()=>d,kt:()=>b});var o=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function s(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,o)}return r}function t(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?s(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,o,n=function(e,a){if(null==e)return{};var r,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)r=s[o],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)r=s[o],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=o.createContext({}),c=function(e){var a=o.useContext(i),r=a;return e&&(r="function"==typeof e?e(a):t(t({},a),e)),r},d=function(e){var a=c(e.components);return o.createElement(i.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,b=u["".concat(i,".").concat(m)]||u[m]||p[m]||s;return r?o.createElement(b,t(t({ref:a},d),{},{components:r})):o.createElement(b,t({ref:a},d))}));function b(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=r.length,t=new Array(s);t[0]=m;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=e,l[u]="string"==typeof e?e:n,t[1]=l;for(var c=2;c<s;c++)t[c]=r[c];return o.createElement.apply(null,t)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9881:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const s={sidebar_position:1},t="Introducci\xf3n",l={unversionedId:"intro",id:"intro",title:"Introducci\xf3n",description:"Presentaci\xf3n",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/eloquent/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Gu\xeda de Eloquent",permalink:"/eloquent/docs/category/gu\xeda-de-eloquent"}},i={},c=[{value:"Presentaci\xf3n",id:"presentaci\xf3n",level:2},{value:"\xbfQu\xe9 es un ORM y por qu\xe9 es importante?",id:"qu\xe9-es-un-orm-y-por-qu\xe9-es-importante",level:2},{value:"\xbfQu\xe9 es Eloquent y por qu\xe9 es el ORM m\xe1s popular en Laravel?",id:"qu\xe9-es-eloquent-y-por-qu\xe9-es-el-orm-m\xe1s-popular-en-laravel",level:2}],d={toc:c},u="wrapper";function p(e){let{components:a,...r}=e;return(0,n.kt)(u,(0,o.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,n.kt)("h2",{id:"presentaci\xf3n"},"Presentaci\xf3n"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Autor: Jes\xfas Quintana Esquiliche")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Resumen:")," Este tutorial es una gu\xeda completa y sencilla para aprender a utilizar Eloquent y las bases de datos de Laravel. A trav\xe9s de ejemplos pr\xe1cticos, aprender\xe1s a dise\xf1ar y modelar tus bases de datos, a realizar consultas avanzadas, y a optimizar el rendimiento de tu aplicaci\xf3n. Descubrir\xe1s c\xf3mo utilizar las relaciones entre tablas para construir modelos de datos complejos, c\xf3mo utilizar las migraciones para mantener la integridad de tu base de datos, y c\xf3mo integrar Eloquent con otras herramientas y librer\xedas de Laravel."),(0,n.kt)("p",null,"Con este tutorial, podr\xe1s llevar tus habilidades de Eloquent al siguiente nivel, sin importar si eres un desarrollador novato o experimentado. Aprender\xe1s los trucos y t\xe9cnicas m\xe1s avanzados para construir aplicaciones web con bases de datos potentes y eficientes."),(0,n.kt)("p",null,"\xa1No esperes m\xe1s para empezar a dominar Eloquent y las bases de datos con Laravel!"),(0,n.kt)("h2",{id:"qu\xe9-es-un-orm-y-por-qu\xe9-es-importante"},"\xbfQu\xe9 es un ORM y por qu\xe9 es importante?"),(0,n.kt)("p",null,"Un ORM (Object-Relational Mapping) es una t\xe9cnica de programaci\xf3n que permite a los desarrolladores interactuar con bases de datos relacionales utilizando objetos y m\xe9todos en lugar de escribir consultas SQL directamente. En lugar de interactuar con la base de datos a trav\xe9s de SQL, un ORM proporciona una capa de abstracci\xf3n que se encarga de la comunicaci\xf3n con la base de datos en nombre del desarrollador."),(0,n.kt)("p",null,"La capa de abstracci\xf3n que proporciona un ORM permite a los desarrolladores trabajar con objetos y relaciones de objetos en lugar de tablas y relaciones de tablas. Los objetos pueden ser m\xe1s f\xe1ciles de trabajar que las tablas y las relaciones de objetos pueden ser m\xe1s f\xe1ciles de definir y mantener que las relaciones de tablas."),(0,n.kt)("p",null,"Un ORM mapea objetos de c\xf3digo a filas de una tabla de base de datos, lo que significa que el desarrollador puede trabajar con objetos en su c\xf3digo y luego persistirlos en la base de datos sin tener que preocuparse por la traducci\xf3n de un objeto a una consulta SQL. Adem\xe1s, los ORM tambi\xe9n proporcionan herramientas para trabajar con consultas, lo que facilita la creaci\xf3n y ejecuci\xf3n de consultas complejas."),(0,n.kt)("p",null,"Los ORM son importantes en el desarrollo de aplicaciones web modernas porque simplifican el proceso de trabajar con bases de datos, reducen errores y mejoran la eficiencia en el desarrollo de aplicaciones. Al utilizar un ORM, los desarrolladores pueden definir modelos que representen las tablas de la base de datos, crear relaciones entre ellos y utilizar los m\xe9todos proporcionados por el ORM para realizar operaciones CRUD (Create, Read, Update, Delete) en la base de datos."),(0,n.kt)("p",null,"Adem\xe1s, los ORM tambi\xe9n proporcionan consultas generadas autom\xe1ticamente para realizar consultas complejas en la base de datos. Esto significa que los desarrolladores pueden realizar consultas complejas sin tener que escribir manualmente la consulta SQL. Esto reduce el riesgo de errores y acelera el proceso de desarrollo."),(0,n.kt)("p",null,"Los ORM tambi\xe9n proporcionan integraci\xf3n con herramientas de migraci\xf3n, lo que facilita la administraci\xf3n de cambios en la estructura de la base de datos y la actualizaci\xf3n de las aplicaciones. Al utilizar herramientas de migraci\xf3n, los desarrolladores pueden administrar los cambios en la estructura de la base de datos de manera m\xe1s f\xe1cil y segura. Adem\xe1s, las herramientas de migraci\xf3n tambi\xe9n pueden ayudar a garantizar que la base de datos y la aplicaci\xf3n est\xe9n en sincron\xeda."),(0,n.kt)("p",null,"En resumen, los ORM son importantes porque simplifican el proceso de trabajar con bases de datos, reducen errores y mejoran la eficiencia en el desarrollo de aplicaciones web modernas. Al proporcionar una capa de abstracci\xf3n entre el c\xf3digo de la aplicaci\xf3n y la base de datos subyacente, los ORM permiten a los desarrolladores trabajar con modelos y objetos en lugar de preocuparse por la complejidad de la base de datos. Adem\xe1s, los ORM proporcionan herramientas para trabajar con consultas, integraci\xf3n con herramientas de migraci\xf3n y m\xe1s, lo que facilita la administraci\xf3n de la base de datos y mejora la eficiencia en el desarrollo de aplicaciones."),(0,n.kt)("h2",{id:"qu\xe9-es-eloquent-y-por-qu\xe9-es-el-orm-m\xe1s-popular-en-laravel"},"\xbfQu\xe9 es Eloquent y por qu\xe9 es el ORM m\xe1s popular en Laravel?"),(0,n.kt)("p",null,"Eloquent es el ORM (Object-Relational Mapping) que se utiliza en el framework de PHP Laravel. Fue creado para simplificar la interacci\xf3n con la base de datos, permitiendo a los desarrolladores interactuar con ella a trav\xe9s de modelos y m\xe9todos en lugar de consultas SQL directas."),(0,n.kt)("p",null,"Eloquent es el ORM m\xe1s popular en Laravel por varias razones. En primer lugar, es muy f\xe1cil de usar y de aprender. Laravel se enorgullece de ser un framework f\xe1cil de usar para desarrolladores de todos los niveles, y Eloquent es un gran ejemplo de ello. Con Eloquent, los desarrolladores pueden definir modelos para representar las tablas de la base de datos, crear relaciones entre ellos y utilizar los m\xe9todos proporcionados por Eloquent para realizar operaciones CRUD (Crear, Leer, Actualizar y Eliminar) en la base de datos."),(0,n.kt)("p",null,"En segundo lugar, Eloquent es muy potente y vers\xe1til. Ofrece muchas caracter\xedsticas avanzadas, como la definici\xf3n de relaciones de tablas, el uso de cl\xe1usulas where y la agrupaci\xf3n de registros, y la capacidad de anidar consultas complejas. Esto permite a los desarrolladores crear consultas complejas de manera f\xe1cil y eficiente."),(0,n.kt)("p",null,"Adem\xe1s, Eloquent tambi\xe9n es muy personalizable. Los desarrolladores pueden extender el comportamiento de Eloquent utilizando traits y tambi\xe9n pueden agregar su propia l\xf3gica de negocios a los modelos. Esto les da un mayor control sobre c\xf3mo interact\xfaan sus modelos con la base de datos."),(0,n.kt)("p",null,"Otra raz\xf3n por la que Eloquent es tan popular en Laravel es que es muy f\xe1cil de integrar con otras partes del framework. Por ejemplo, los desarrolladores pueden utilizar la integraci\xf3n de Eloquent con el sistema de autenticaci\xf3n de Laravel para manejar la autenticaci\xf3n y la autorizaci\xf3n de los usuarios."),(0,n.kt)("p",null,"En resumen, Eloquent es el ORM m\xe1s popular en Laravel porque es f\xe1cil de usar y aprender, es potente y vers\xe1til, es personalizable y es f\xe1cil de integrar con otras partes del framework. Al utilizar Eloquent, los desarrolladores pueden interactuar con la base de datos de una manera mucho m\xe1s f\xe1cil y eficiente, lo que reduce el tiempo de desarrollo y los errores."))}p.isMDXComponent=!0}}]);